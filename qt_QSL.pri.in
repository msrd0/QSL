QT.QSL.VERSION = @QSL_VERSION@
QT.QSL.MAJOR_VERSION = @QSL_MAJOR@
QT.QSL.MINOR_VERSION = @QSL_MINOR@
QT.QSL.PATCH_VERSION = @QSL_PATCH@
QT.QSL.name = qslcore
QT.QSL.defines =
QT.QSL.includes = @CMAKE_INSTALL_PREFIX@/include/qsl/
QT.QSL.private_includes =
QT.QSL.libs = @CMAKE_INSTALL_PREFIX@/lib
QT.QSL.depends = sql QSLVariant

QT.QSLVariant.VERSION = @QSL_VERSION@
QT.QSLVariant.MAJOR_VERSION = @QSL_MAJOR@
QT.QSLVariant.MINOR_VERSION = @QSL_MINOR@
QT.QSLVariant.PATCH_VERSION = @QSL_PATCH@
QT.QSLVariant.name = qslvariant
QT.QSLVariant.defines =
QT.QSLVariant.includes = @CMAKE_INSTALL_PREFIX@/include/qsl/
QT.QSLVariant.private_includes =
QT.QSLVariant.libs = @CMAKE_INSTALL_PREFIX@/lib
QT.QSLVariant.depends = core

QT.QSLDriver.VERSION = @QSL_VERSION@
QT.QSLDriver.MAJOR_VERSION = @QSL_MAJOR@
QT.QSLDriver.MINOR_VERSION = @QSL_MINOR@
QT.QSLDriver.PATCH_VERSION = @QSL_PATCH@
QT.QSLDriver.name = qsld
QT.QSLDriver.defines =
QT.QSLDriver.includes = @CMAKE_INSTALL_PREFIX@/include/qsl/
QT.QSLDriver.private_includes =
QT.QSLDriver.libs = @CMAKE_INSTALL_PREFIX@/lib
QT.QSLDriver.depends = sql

isEmpty(QSLC_DIR):QSLC_DIR = .
isEmpty(QSLC_EXE):QSLC_EXE = @CMAKE_INSTALL_PREFIX@/bin/qslc

defineReplace(qslc_output_files) {
	output = $$system(cd $$OUT_PWD && $$QSLC_EXE --name $$1 || echo qslcReturnedAnErrorCode)
	return($$output)
}

qslc.name = QSL Compiler ${QMAKE_FILE_IN}
qslc.input = DATABASES
qslc.output_function = qslc_output_files
qslc.commands = $$QSLC_EXE -d $$QSLC_DIR -q ${QMAKE_FILE_IN}
qslc.variable_out = HEADERS
qslc.CONFIG += target_predeps add_input_as_makefile_deps

silent:qslc.commands = @echo qslc ${QMAKE_FILE_IN} && $$qslc.commands
QMAKE_EXTRA_COMPILERS += qslc

!isEmpty(DATABASES) {
	INCLUDEPATH += $$absolute_path($$QSLC_DIR, $$OUT_PWD)
}
